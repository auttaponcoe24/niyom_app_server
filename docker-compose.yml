version: '3.9'

services:
  app:
    container_name: 'niyom_server_app'
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '3000:8000' # Map port 3000 ของ host กับ port 8000 ของ container
    env_file:
      - .env # ใช้ไฟล์ .env สำหรับการตั้งค่าตัวแปรสภาพแวดล้อม
    depends_on:
      - mongo
      - postgres
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs # กำหนด volume สำหรับ log files (optional)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"] # เปลี่ยน endpoint ตาม app
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    container_name: mongo
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
    driver: local
  postgres_data:
    driver: local
