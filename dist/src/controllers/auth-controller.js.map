{"version":3,"sources":["../../../src/controllers/auth-controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport prisma from \"../models/prisma\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport { loginSchema } from \"@/validators/auth-validator\";\nimport createError from \"@/utils/create-error\";\nimport Joi from \"joi\";\n\nexport const register = async (\n\treq: Request,\n\tres: Response,\n\tnext: NextFunction\n) => {\n\ttry {\n\t\tconst { email, password } = req.body;\n\n\t\t// Hash the password\n\t\tconst hashPassword = await bcrypt.hash(password, 12);\n\n\t\t// Create the user in the database\n\t\tconst data = await prisma.user.create({\n\t\t\tdata: {\n\t\t\t\temail: email,\n\t\t\t\tpassword: hashPassword,\n\t\t\t},\n\t\t});\n\n\t\tconst payload = {\n\t\t\tid: data.id,\n\t\t\tid_passpost: data.id_passpost,\n\t\t\tfirstname: data.firstname,\n\t\t\tlastname: data.lastname,\n\t\t\trole: data.role,\n\t\t};\n\n\t\tconst accessToken = jwt.sign(\n\t\t\tpayload,\n\t\t\tprocess.env.JWT_SECREY_KEY || \"secretKeyRandom\",\n\t\t\t{ expiresIn: process.env.JWT_EXPIRES_IN || \"30d\" }\n\t\t);\n\n\t\tdelete data.password;\n\t\t// Send a response back to the client\n\t\tres.status(201).json({\n\t\t\tmessage: \"ok\",\n\t\t\tuser: data,\n\t\t\taccessToken: accessToken,\n\t\t});\n\t} catch (error) {\n\t\tnext(error); // Pass errors to the error handler middleware\n\t}\n};\n\nexport const login = async (\n\treq: Request,\n\tres: Response,\n\tnext: NextFunction\n) => {\n\ttry {\n\t\tconst {\n\t\t\tvalue,\n\t\t\terror,\n\t\t}: {\n\t\t\tvalue: {\n\t\t\t\temail: string;\n\t\t\t\tpassword: string;\n\t\t\t};\n\t\t\terror: Joi.ValidationError;\n\t\t} = loginSchema.validate(req.body);\n\n\t\tif (error) {\n\t\t\treturn next(createError(\"email incorrect or password incorrect\", 400));\n\t\t}\n\n\t\tconst user = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\temail: value.email,\n\t\t\t},\n\t\t});\n\n\t\tif (!user) {\n\t\t\treturn next(createError(\"mail is not found\", 400));\n\t\t}\n\n\t\tconst isMatch = await bcrypt.compare(value.password, user.password);\n\t\tif (!isMatch) {\n\t\t\treturn next(createError(\"password incorrect\", 400));\n\t\t}\n\n\t\tconst payload = {\n\t\t\tid: user.id,\n\t\t\tid_passpost: user.id_passpost,\n\t\t\tfirstname: user.firstname,\n\t\t\tlastname: user.lastname,\n\t\t\trole: user.role,\n\t\t};\n\n\t\tconst accessToken = jwt.sign(\n\t\t\tpayload,\n\t\t\tprocess.env.JWT_SECRET_KEY || \"secretKeyRandom\",\n\t\t\t{ expiresIn: process.env.JWT_EXPIRES_IN || \"30d\" }\n\t\t);\n\n\t\tdelete user.password;\n\n\t\tres.status(200).json({\n\t\t\tmessage: \"ok\",\n\t\t\tuser: user,\n\t\t\taccessToken: accessToken,\n\t\t});\n\t} catch (error) {\n\t\tnext(error);\n\t}\n};\n\nexport const getProfile = async (\n\treq: Request,\n\tres: Response,\n\tnext: NextFunction\n) => {\n\ttry {\n\t\tres.status(200).json({ message: \"ok\", user: req.user });\n\t} catch (error) {\n\t\tnext(error);\n\t}\n};\n\nexport const editProfile = async (\n\treq: Request,\n\tres: Response,\n\tnext: NextFunction\n) => {\n\ttry {\n\t\tconst { id } = req.user;\n\t\tconst { firstname, lastname, id_passpost, address } = req.body;\n\n\t\tconst findUser = await prisma.user.update({\n\t\t\twhere: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\tfirstname,\n\t\t\t\tlastname,\n\t\t\t\tid_passpost,\n\t\t\t\taddress,\n\t\t\t},\n\t\t});\n\n\t\tres.status(201).json({ message: \"ok\", result: findUser });\n\t} catch (error) {\n\t\tnext(error);\n\t}\n};\n"],"names":["editProfile","getProfile","login","register","req","res","next","email","password","body","hashPassword","bcrypt","hash","data","prisma","user","create","payload","id","id_passpost","firstname","lastname","role","accessToken","jwt","sign","process","env","JWT_SECREY_KEY","expiresIn","JWT_EXPIRES_IN","status","json","message","error","value","loginSchema","validate","createError","findUnique","where","isMatch","compare","JWT_SECRET_KEY","address","findUser","update","result"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}